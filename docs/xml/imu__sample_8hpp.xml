<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="imu__sample_8hpp" kind="file" language="C++">
    <compoundname>imu_sample.hpp</compoundname>
    <includes refid="types_8hpp" local="yes">agilib/math/types.hpp</includes>
    <includedby refid="controller__base_8hpp" local="yes">agilib/include/agilib/controller/controller_base.hpp</includedby>
    <includedby refid="controller__geo_8hpp" local="yes">agilib/include/agilib/controller/geometric/controller_geo.hpp</includedby>
    <includedby refid="controller__indi_8hpp" local="yes">agilib/include/agilib/controller/indi/controller_indi.hpp</includedby>
    <includedby refid="cog__filter_8hpp" local="yes">agilib/include/agilib/controller/mpc/cog_filter.hpp</includedby>
    <includedby refid="ekf_8hpp" local="yes">agilib/include/agilib/estimator/ekf/ekf.hpp</includedby>
    <includedby refid="ekf__imu_8hpp" local="yes">agilib/include/agilib/estimator/ekf_imu/ekf_imu.hpp</includedby>
    <includedby refid="estimator__base_8hpp" local="yes">agilib/include/agilib/estimator/estimator_base.hpp</includedby>
    <includedby refid="feedback_8hpp" local="yes">agilib/include/agilib/types/feedback.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>agilib/math/types.hpp</label>
        <link refid="types_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>agilib/include/agilib/types/imu_sample.hpp</label>
        <link refid="imu__sample_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Eigen</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>agilib/include/agilib/base/pipeline.hpp</label>
        <link refid="pipeline_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>agilib/include/agilib/bridge/bridge_base.hpp</label>
        <link refid="bridge__base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>agilib/include/agilib/bridge/ctrl/ctrl_bridge.hpp</label>
        <link refid="ctrl__bridge_8hpp_source"/>
      </node>
      <node id="24">
        <label>agilib/include/agilib/bridge/ctrl/ctrl_encoding.hpp</label>
        <link refid="ctrl__encoding_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>agilib/include/agilib/bridge/debug_bridge.hpp</label>
        <link refid="debug__bridge_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>agilib/include/agilib/bridge/laird/laird_bridge.hpp</label>
        <link refid="laird__bridge_8hpp_source"/>
      </node>
      <node id="22">
        <label>agilib/include/agilib/bridge/msp/msp_bridge.hpp</label>
        <link refid="msp__bridge_8hpp_source"/>
      </node>
      <node id="25">
        <label>agilib/include/agilib/bridge/msp/msp_encoding.hpp</label>
        <link refid="msp__encoding_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>agilib/include/agilib/bridge/sbus/sbus_bridge.hpp</label>
        <link refid="sbus__bridge_8hpp_source"/>
      </node>
      <node id="19">
        <label>agilib/include/agilib/bridge/serial_bridge.hpp</label>
        <link refid="serial__bridge_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>agilib/include/agilib/controller/controller_base.hpp</label>
        <link refid="controller__base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>agilib/include/agilib/controller/geometric/controller_geo.hpp</label>
        <link refid="controller__geo_8hpp_source"/>
      </node>
      <node id="7">
        <label>agilib/include/agilib/controller/indi/controller_indi.hpp</label>
        <link refid="controller__indi_8hpp_source"/>
      </node>
      <node id="10">
        <label>agilib/include/agilib/controller/mpc/cog_filter.hpp</label>
        <link refid="cog__filter_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>agilib/include/agilib/controller/mpc/controller_mpc.hpp</label>
        <link refid="controller__mpc_8hpp_source"/>
      </node>
      <node id="9">
        <label>agilib/include/agilib/controller/pid/controller_pid.hpp</label>
        <link refid="controller__pid_8hpp_source"/>
      </node>
      <node id="11">
        <label>agilib/include/agilib/estimator/ekf/ekf.hpp</label>
        <link refid="ekf_8hpp_source"/>
      </node>
      <node id="12">
        <label>agilib/include/agilib/estimator/ekf_imu/ekf_imu.hpp</label>
        <link refid="ekf__imu_8hpp_source"/>
      </node>
      <node id="13">
        <label>agilib/include/agilib/estimator/estimator_base.hpp</label>
        <link refid="estimator__base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>agilib/include/agilib/estimator/feedthrough/feedthrough_estimator.hpp</label>
        <link refid="feedthrough__estimator_8hpp_source"/>
      </node>
      <node id="15">
        <label>agilib/include/agilib/estimator/mock_vio/mock_vio.hpp</label>
        <link refid="mock__vio_8hpp_source"/>
      </node>
      <node id="4">
        <label>agilib/include/agilib/pilot/pilot.hpp</label>
        <link refid="pilot_8hpp_source"/>
      </node>
      <node id="5">
        <label>agilib/include/agilib/pilot/pilot_params.hpp</label>
        <link refid="pilot__params_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>agilib/include/agilib/types/feedback.hpp</label>
        <link refid="feedback_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>agilib/include/agilib/types/imu_sample.hpp</label>
        <link refid="imu__sample_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structagi_1_1ImuSample" prot="public">agi::ImuSample</innerclass>
    <innernamespace refid="namespaceagi">agi</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;agilib/math/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">agi<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="structagi_1_1ImuSample" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structagi_1_1ImuSample" kindref="compound">ImuSample</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="structagi_1_1ImuSample" kindref="compound">ImuSample</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="structagi_1_1ImuSample" kindref="compound">ImuSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structagi_1_1ImuSample" kindref="compound">ImuSample</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="structagi_1_1ImuSample" kindref="compound">ImuSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;3&gt;&amp;<sp/>acc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;3&gt;&amp;<sp/>omega)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>t(t),<sp/>acc(acc),<sp/>omega(omega)<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="structagi_1_1ImuSample" kindref="compound">~ImuSample</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>omega.allFinite()<sp/>&amp;&amp;<sp/>acc.allFinite()<sp/>&amp;&amp;<sp/>std::isfinite(t);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>Scalar<sp/>t{NAN};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>Vector&lt;3&gt;<sp/>acc{NAN,<sp/>NAN,<sp/>NAN};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>Vector&lt;3&gt;<sp/>omega{NAN,<sp/>NAN,<sp/>NAN};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/>time)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&lt;<sp/>time;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/>time)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&lt;=<sp/>time;<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/>time)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&gt;<sp/>time;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/>time)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&gt;=<sp/>time;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>agi</highlight></codeline>
    </programlisting>
    <location file="agilib/include/agilib/types/imu_sample.hpp"/>
  </compounddef>
</doxygen>
