<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="feedback_8hpp" kind="file" language="C++">
    <compoundname>feedback.hpp</compoundname>
    <includes refid="types_8hpp" local="yes">agilib/math/types.hpp</includes>
    <includes refid="imu__sample_8hpp" local="yes">agilib/types/imu_sample.hpp</includes>
    <includedby refid="bridge__base_8hpp" local="yes">agilib/include/agilib/bridge/bridge_base.hpp</includedby>
    <includedby refid="ctrl__bridge_8hpp" local="yes">agilib/include/agilib/bridge/ctrl/ctrl_bridge.hpp</includedby>
    <includedby refid="ctrl__encoding_8hpp" local="yes">agilib/include/agilib/bridge/ctrl/ctrl_encoding.hpp</includedby>
    <includedby refid="msp__bridge_8hpp" local="yes">agilib/include/agilib/bridge/msp/msp_bridge.hpp</includedby>
    <includedby refid="msp__encoding_8hpp" local="yes">agilib/include/agilib/bridge/msp/msp_encoding.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>agilib/math/types.hpp</label>
        <link refid="types_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>agilib/include/agilib/types/feedback.hpp</label>
        <link refid="feedback_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>agilib/types/imu_sample.hpp</label>
        <link refid="imu__sample_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Eigen</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>agilib/include/agilib/base/pipeline.hpp</label>
        <link refid="pipeline_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>agilib/include/agilib/bridge/bridge_base.hpp</label>
        <link refid="bridge__base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>agilib/include/agilib/bridge/ctrl/ctrl_bridge.hpp</label>
        <link refid="ctrl__bridge_8hpp_source"/>
      </node>
      <node id="12">
        <label>agilib/include/agilib/bridge/ctrl/ctrl_encoding.hpp</label>
        <link refid="ctrl__encoding_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>agilib/include/agilib/bridge/debug_bridge.hpp</label>
        <link refid="debug__bridge_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>agilib/include/agilib/bridge/laird/laird_bridge.hpp</label>
        <link refid="laird__bridge_8hpp_source"/>
      </node>
      <node id="10">
        <label>agilib/include/agilib/bridge/msp/msp_bridge.hpp</label>
        <link refid="msp__bridge_8hpp_source"/>
      </node>
      <node id="13">
        <label>agilib/include/agilib/bridge/msp/msp_encoding.hpp</label>
        <link refid="msp__encoding_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>agilib/include/agilib/bridge/sbus/sbus_bridge.hpp</label>
        <link refid="sbus__bridge_8hpp_source"/>
      </node>
      <node id="7">
        <label>agilib/include/agilib/bridge/serial_bridge.hpp</label>
        <link refid="serial__bridge_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>agilib/include/agilib/pilot/pilot.hpp</label>
        <link refid="pilot_8hpp_source"/>
      </node>
      <node id="5">
        <label>agilib/include/agilib/pilot/pilot_params.hpp</label>
        <link refid="pilot__params_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>agilib/include/agilib/types/feedback.hpp</label>
        <link refid="feedback_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structagi_1_1Feedback" prot="public">agi::Feedback</innerclass>
    <innernamespace refid="namespaceagi">agi</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;agilib/math/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;agilib/types/imu_sample.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">agi<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="structagi_1_1Feedback" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structagi_1_1Feedback" kindref="compound">Feedback</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>Scalar<sp/>t{NAN};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>received{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="structagi_1_1ImuSample" kindref="compound">ImuSample</ref><sp/>imu;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>Quaternion<sp/>attitude{NAN,<sp/>NAN,<sp/>NAN,<sp/>NAN};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>Scalar<sp/>voltage{NAN};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>Scalar<sp/>current{NAN};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>Vector&lt;4&gt;<sp/>rotor_speed_rads{NAN,<sp/>NAN,<sp/>NAN,<sp/>NAN};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>Vector&lt;4&gt;<sp/>rotor_thrust_newton{NAN,<sp/>NAN,<sp/>NAN,<sp/>NAN};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>Vector&lt;4&gt;<sp/>rotor_value{NAN,<sp/>NAN,<sp/>NAN,<sp/>NAN};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>CTRLMODE<sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>INVALID<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>OFF<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_PARAM<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ARM<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTOR_THROTTLE<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTOR_SPEED<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTOR_THRUST<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>BODY_RATE<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ATTITUDE<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>VELOCITY<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>EMERGENCY<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>FEEDBACK<sp/>=<sp/>255</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>CTRLMODE<sp/>control_mode{CTRLMODE::INVALID};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>armed{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ROTORFEEDBACKTYPE<sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>INVALID<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>THROTTLE<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>SPEED<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>THRUST<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>ROTORFEEDBACKTYPE<sp/>rotor_feedback_type{ROTORFEEDBACKTYPE::INVALID};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isfinite(t)<sp/>||<sp/>received;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasTimestamp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isfinite(t);<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBatteryVoltageValid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isfinite(voltage);<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBatteryCurrentValid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isfinite(current);<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRotorSpeedValid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotor_speed_rads.allFinite();<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isImuValid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imu.valid();<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAttitudeValid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attitude.coeffs().allFinite();<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>agi</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="agilib/include/agilib/types/feedback.hpp"/>
  </compounddef>
</doxygen>
